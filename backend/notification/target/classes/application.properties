server.port=8081
<<<<<<< HEAD
spring.kafka.bootstrap-servers=192.168.0.111:9092
=======
spring.kafka.bootstrap-servers=172.27.133.90:9092
>>>>>>> 7ab337553934c54f8e90ce077e032f1f0ca2946c
spring.kafka.consumer.group-id=console-consumer-5182
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.bootstrap-servers=host.docker.internal:9092
line.bot.channel-token=dnDti4kzcgUR8oI3fUxQYJlZEwmRvvy4KzoAGUkj97V6gEjmpOT/IKchPlCFIdBE9KO9bXmbO1fhBNZR1mfBPZNH1Amz/YjHVXggZiQXyBAwDb2gF+Jj2VmN3+2kEHLWCWNXSq0kKJdghmNesnc3yQdB04t89/1O/w1cDnyilFU=
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML

# spring security
spring.security.user.name=admin
spring.security.user.password=user1234

# Postgresql
spring.datasource.url=jdbc:postgresql://localhost:5432/InventoryManagement
spring.datasource.username=postgres
spring.datasource.password=user1234
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

#Camunda
camunda.bpm.authorization.enabled=true
